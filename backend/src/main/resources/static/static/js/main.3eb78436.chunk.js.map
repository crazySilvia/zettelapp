{"version":3,"sources":["Components/Header.tsx","Components/NavBar.tsx","Services/apiService.ts","Context/AuthProvider.tsx","Pages/Mainpage.tsx","Pages/LoginPage.tsx","Routing/RequireAuth.tsx","Components/AddArtikelFeld.tsx","Components/AddListField.tsx","Pages/ListPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","_ref","title","react_default","a","createElement","className","NavBar","react_router_dom","to","type","value","getAllLists","token","axios","get","headers","Authorization","then","response","data","saveNewList","listName","post","getListByName","concat","AuthContext","createContext","setJwt","AuthProvider","children","_useState","useState","_useState2","Object","slicedToArray","setToken","_useState3","_useState4","jwtDecoded","setJwtDecoded","Provider","jwt","jwt_decode","toString","Mainpage","lists","setLists","_useContext","useContext","useEffect","updateLists","catch","e","console","log","message","Header_Header","sub","LoginPage","name","setName","password","setPassword","placeholder","onChange","event","target","RequireAuth","react_router","AddArtikelFeld","anzahl","setAnzahl","artikel","setArtikel","parseInt","AddListField","input","setInput","onSubmit","preventDefault","ListPage","params","useParams","list","setList","_useState5","_useState6","loadItems","whichList","App","path","element","Mainpage_Mainpage","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3eb78436.chunk.js","sourcesContent":["import \".//Header.css\"\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\n\nexport default function Header({title}: {title: string}){\n    return(\n        <header className=\"header\">\n            {title}\n        </header>\n    )\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default function NavBar() {\n\n    return (\n        <div className={\"navBar\"}>\n            <Link to={\"/\"}>\n                <input type=\"button\" value={\"Startseite\"} />\n            </Link>\n            <Link to={\"/login\"}>\n                <input type=\"button\" value={\"Login\"} />\n            </Link>\n            <Link to={\"/register\"}>\n                <input type=\"button\" value={\"Registrieren\"}/>\n            </Link>\n            <Link to={\"/userpage\"}>\n                <input type=\"button\" value={\"Ãœbersicht\"}/>\n            </Link>\n        </div>\n    )\n}","import React from 'react';\nimport axios from \"axios\";\nimport {IArtikel} from \"../Models/Artikel\";\nimport {NewListDto} from \"../Models/NewListDto\";\n\nexport const getAllLists = (token?: string) =>\n    axios.get(\"/api/lists\", token?{headers:{\"Authorization\": \"Bearer \" + token}}:{})\n        .then(response => response.data)\n\nexport const saveNewList = (listName: NewListDto, token?: string) =>\n    axios.post(\"/api/lists\", listName, token?{headers:{\"Authorization\": \"Bearer \" + token}}:{})\n        .then(response => response.data)\n\nexport const getListByName = (listName: string | undefined, token?: string) =>\n    axios.get(`/api/lists/${listName}`, token?{headers:{\"Authorization\": \"Bearer \" + token}}:{})\n        .then(response => response.data)\n\n\n//In order to gain the TypeScript typings (for intellisense / autocomplete)\n// while using CommonJS imports with require() use the following approach:\n//const axios = require('axios').default;\nconst INDEV= process.env.NODE_ENV ===\"development\"\nconst BASEURL= INDEV ? \"http://localhost:8080\" : \"\";\nexport const getAllArtikel: ()=> Promise<IArtikel[]> = () =>\n    axios.get(BASEURL+'/api/zettel').then(response => response.data)\n\nexport const postArtikel = (name: String) =>\n    axios.post(BASEURL+'/api/zettel/addArtikel', {name: name})\n\n","import React from 'react';\nimport {createContext, ReactElement, useState} from \"react\";\nimport jwt_decode from 'jwt-decode'\n\nexport interface AuthContextType {\n    token?: string,\n    jwtDecoded?: { sub?: string }\n    setJwt: (jwt: string) => void\n}\n\nexport const AuthContext = createContext<AuthContextType>({\n    setJwt: (data) => {throw \"Login nicht gestartet\"}\n})\n\nexport default function AuthProvider({children} : {children: ReactElement<any, any>}) {\n\n    const [token, setToken] = useState<string>()\n    const [jwtDecoded, setJwtDecoded] = useState({})\n\n    const setJwt = (jwt: string) => {\n        setToken(jwt)\n        setJwtDecoded(jwt_decode(jwt.toString()))\n    }\n\n    return (\n        <AuthContext.Provider value={{token, jwtDecoded, setJwt}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}","import \".//Mainpage.css\"\nimport Header from \"../Components/Header\";\nimport React, {useContext, useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport NavBar from \"../Components/NavBar\";\nimport {getAllLists} from \"../Services/apiService\";\nimport {AuthContext} from \"../Context/AuthProvider\";\n\nexport default function Mainpage(){\n\n    const [lists,setLists] = useState()\n    const {token, jwtDecoded} = useContext(AuthContext)\n\n    useEffect( () => {\n        updateLists().catch(e => console.log(e.message))\n    },[])\n\n    const updateLists = () => getAllLists(token).then(setLists)\n\n    if (!lists){\n        return(\n            <div className=\"mainpage\">\n                <NavBar />\n                <Header title=\"Zettel\"/>\n                //ToDo Bild einfÃ¼gen\n                <Link to=\"/login\">Login</Link>\n                <Link to=\"/register\">Registrieren</Link>\n            </div>\n        )\n    }return(\n        <div>\n            <NavBar />\n            <Header title=\"Zettel\"/>\n            <h2> OrrA von {jwtDecoded?.sub}</h2>\n\n        </div>\n    )\n}\n\n//<AddListField/>\n//<ListGallery lists={lists}/>","\nimport React, {ChangeEvent, FormEvent, useContext, useState} from \"react\";\nimport Header from \"../Components/Header\";\nimport NavBar from \"../Components/NavBar\";\nimport axios from \"axios\";\nimport {AuthContext} from \"../Context/AuthProvider\";\n\nexport default function LoginPage(){\n\n    const[name, setName] = useState<string>()\n    const [password, setPassword] = useState<string>()\n\n    const {setJwt} = useContext(AuthContext)\n\n    const onUserNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value)\n    }\n\n    const onPasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.target.value)\n    }\n\n    const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        axios.post('/auth/login', {name, password})\n            .then(response => response.data)\n            .then((data) => {\n                setJwt(data)\n            })\n    }\n\n    return(\n        //1. Header\n        //2. NavBar\n        //3. LoginFormular\n\n        <div className=\"loginpage\">\n            <Header title=\"Anmelden\"/>\n            <NavBar />\n            <form>\n                <input type=\"text\" placeholder=\"Nutzername\" onChange={onUserNameChange} value={name}/>\n                <input type=\"password\" placeholder=\"password\" onChange={onPasswordChange} value={password}/>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport {ReactElement, useContext} from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {AuthContext} from \"../Context/AuthProvider\";\n\n\nexport default function RequireAuth({children} : {children: ReactElement<any, any>}) {\n    const {token} = useContext(AuthContext)\n    // das sorgt dafÃ¼r. dass der User immer zum Login gefÃ¼hrt wird, wenn er noch nicht eingeloggt ist\n    return token ? children : <Navigate to=\"/login\"/>\n}","import React from 'react';\nimport {ChangeEvent, Dispatch, SetStateAction} from \"react\";\n\ninterface AddArtikelFeldProps {\n    anzahl: number\n    setAnzahl: Dispatch<SetStateAction<number>>\n    artikel: string\n    setArtikel: Dispatch<SetStateAction<string>>\n}\n\nexport default function AddArtikelFeld({anzahl,setAnzahl,artikel,setArtikel} : AddArtikelFeldProps){\n\n    const onItemChange: (event: ChangeEvent<HTMLInputElement>) => void = (event) => {\n        setArtikel(event.target.value);\n    }\n\n    const onAmountChange: (event: ChangeEvent<HTMLInputElement>) => void = (event) => {\n        setAnzahl(parseInt(event.target.value));\n    }\n\n    return(\n        <form >\n            <div className=\"addField_input\">\n                <input type=\"text\" onChange={onItemChange} value={artikel}/>\n            </div>\n            <div className=\"addField_input\">\n                <input type=\"text\" onChange={onAmountChange} value={anzahl}/>\n            </div>\n            <div className=\"addField_button\">\n                <button type={\"submit\"}>Add</button>\n            </div>\n        </form>\n)\n}","import React from 'react';\nimport {ChangeEvent, FormEvent, useContext, useState} from \"react\";\nimport {saveNewList} from \"../Services/apiService\";\nimport {NewListDto} from \"../Models/NewListDto\";\nimport {AuthContext} from \"../Context/AuthProvider\";\n\nexport default function AddListField(){\n    const [input,setInput] = useState<string>(\"\")\n    const {token} = useContext(AuthContext)\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setInput(event.target.value)\n    }\n\n    const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n        const newListDto: NewListDto = {\n            listName:input\n        }\n        saveNewList(newListDto, token).catch(e => console.log(e.message))\n        setInput(\"\")\n    }\n\n    return(\n        <form onSubmit={handleSubmit} >\n            <div className=\"addList_input\">\n                <input type=\"text\" onChange={handleChange} value={input}/>\n            </div>\n            <div className=\"addList_button\">\n                <button type={\"submit\"}>Add</button>\n            </div>\n        </form>\n    )\n}","import React from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {AuthContext} from \"../Context/AuthProvider\";\nimport {getListByName} from \"../Services/apiService\";\nimport Header from \"../Components/Header\";\nimport AddArtikelFeld from \"../Components/AddArtikelFeld\";\nimport NavBar from \"../Components/NavBar\";\nimport AddListField from \"../Components/AddListField\";\n\nexport default function ListPage(){\n    let params = useParams()\n\n    const [list, setList] = useState<string[]>()\n    const [artikel, setArtikel] = useState<string>(\"\")\n    const [anzahl, setAnzahl] = useState<number>(0)\n\n    const {token} = useContext(AuthContext)\n\n    useEffect(() => {\n        loadItems().then(() => console.log(list)).catch(e => console.log(e.message))\n    })\n\n    const loadItems = () => getListByName(params.whichList, token).then(setList)\n\n    if (!list){\n        return(\n            <AddListField />\n        )\n    }return(\n        <div>\n            <NavBar />\n            <Header title=\"Zettel\"/>\n\n            <AddArtikelFeld artikel={artikel} setArtikel={setArtikel} anzahl={anzahl} setAnzahl={setAnzahl} />\n        </div>\n    )\n}\n\n//<ItemGallery/>","import React from 'react';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Mainpage from \"./Pages/Mainpage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport RequireAuth from \"./Routing/RequireAuth\";\nimport AuthProvider from \"./Context/AuthProvider\";\nimport ListPage from \"./Pages/ListPage\";\n\nfunction App(){\n    return(\n        <BrowserRouter>\n            <AuthProvider>\n                <Routes>\n                    <Route path=\"/\" element={<Mainpage />}/>\n                    <Route path=\"/lists/:whichList\" element={\n                        <RequireAuth>\n                            <ListPage />\n                        </ RequireAuth>\n                    }/>\n                    <Route path={\"/login\"} element={<LoginPage />}/>\n                </ Routes>\n            </ AuthProvider>\n        </ BrowserRouter>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}