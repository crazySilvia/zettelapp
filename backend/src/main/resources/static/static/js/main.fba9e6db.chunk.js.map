{"version":3,"sources":["Components/Header.tsx","Models/Artikel.tsx","services/FormularListe.tsx","services/api-service.ts","Models/Liste.tsx","Pages/Mainpage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","_ref","title","react_default","a","createElement","className","Artikel","props","_props$artikel","artikel","name","anzahl","onClick","button","index","FormularListe","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","event","updateList","preventDefault","type","onChange","currentTarget","getAllArtikel","axios","get","then","response","data","Liste","setArtikel","useEffect","deleteArtikel","aktuelleListe","toConsumableArray","splice","newArtikel","aktuellerStand","concat","map","key","Mainpage","Header_Header","Liste_Liste","App","Mainpage_Mainpage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"0SAGe,SAASA,EAATC,GAAyC,IAAxBC,EAAwBD,EAAxBC,MAC5B,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACbJ,2BCOE,SAASK,EAAQC,GAC5B,IAAAC,EAAqBD,EAAME,QAApBC,EAAPF,EAAOE,KAAMC,EAAbH,EAAaG,OACb,OACIT,EAAAC,EAAAC,cAAA,SACKM,EAAMC,EACPT,EAAAC,EAAAC,cAAA,UAAQQ,QAAS,kBAAIL,EAAMM,OAAON,EAAMO,SAAxC,eCXL,SAASC,EAAcR,GAE1B,IAAAS,EAA0BC,mBAAiB,IAA3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAcI,EAAdJ,EAAA,GAgBA,OACIhB,EAAAC,EAAAC,cAAA,QAAMmB,SAT6C,SAACC,GAEpD,IAAMf,EAAiB,CAACC,KAAMW,GAC9Bd,EAAMkB,WAAWhB,GAEjBa,EAAS,IACTE,EAAME,mBAIFxB,EAAAC,EAAAC,cAAA,wBACIF,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,OACLN,MAAOA,EACPO,SAlBuC,SAACJ,GACvDF,EAASE,EAAMK,cAAcR,WAoBzBnB,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,SAASN,MAAM,uCCzB1BS,EAA0C,kBACnDC,IAAMC,IAAI,eAAeC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QCHhD,SAASC,IAMZ,IAAApB,EAA8BC,mBAAqB,IAAnDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOP,EAAPS,EAAA,GAAgBmB,EAAhBnB,EAAA,GACAoB,oBAAU,WACNR,IAAgBG,KAAK,SAACE,GAAD,OAAoBE,EAAWF,MACrD,IACH,IAaMI,EAAgB,SAACzB,GAEnB,IAAI0B,EAAarB,OAAAsB,EAAA,EAAAtB,CAAOV,GACxB+B,EAAcE,OAAO5B,EAAO,GAC5BuB,EAAWG,IAGf,OAAOtC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACW,EAAD,CAAeU,WArBF,SAACkB,GAGnB,IAAMC,EAAyB,GAAAC,OAAA1B,OAAAsB,EAAA,EAAAtB,CAAOV,GAAP,CAAgBkC,IAE/CN,EAAWO,MAiBN1C,EAAAC,EAAAC,cAAA,UAAKK,EAAQqC,IAAI,SAACzB,EAAiBP,GAAlB,OACZZ,EAAAC,EAAAC,cAAA,MAAI2C,IAAKjC,GACNZ,EAAAC,EAAAC,cAACE,EAAD,CAASG,QAASY,EAAOP,MAAOA,EAAOD,OAAQ0B,QAGvDrC,EAAAC,EAAAC,cAAA,UAAQQ,QAnBE,WACfyB,EAAW,MAkBN,qBCtCE,SAASW,IAEpB,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC6C,EAAD,CAAQhD,MAAM,mBACdC,EAAAC,EAAAC,cAAC8C,EAAD,OCAGC,MANf,WACE,OACIjD,EAAAC,EAAAC,cAACgD,EAAD,OCQSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAxB,KAAAuB,EAAAE,KAAA,UAAqBzB,KAAK,SAAAjC,GAAiD,IAA9C2D,EAA8C3D,EAA9C2D,OAAQC,EAAsC5D,EAAtC4D,OAAQC,EAA8B7D,EAA9B6D,OAAQC,EAAsB9D,EAAtB8D,OAAQC,EAAc/D,EAAd+D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCHdU,IAASC,OACP/D,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,WAAP,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,OAEFC,SAASC,eAAe,SAM1BhB","file":"static/js/main.fba9e6db.chunk.js","sourcesContent":["import \"../Components/Header.css\"\nimport React from \"react\";\n\nexport default function Header({title}: {title: string}){\n    return(\n        <header className=\"header\">\n            {title}\n        </header>\n    )\n}","import React from \"react\";\nexport interface IArtikel {\n    id?: string;\n    name: string;\n    anzahl?: number; //todo noch implementieren\n}\n\ninterface ArtikelProps{\n    button: (item: number) => void\n    index: number\n    artikel: IArtikel\n}\n\nexport default function Artikel(props:ArtikelProps){\n    const {name, anzahl}=props.artikel\n    return(\n        <p>\n            {name}{anzahl}{/* {props.id}*/}\n            <button onClick={()=>props.button(props.index)}>löschen</button>\n        </p>\n    )\n}","import React, {ChangeEventHandler, FormEventHandler, useState} from \"react\";\nimport {IArtikel} from \"../Models/Artikel\";\n\ninterface FormularListProps{\n    updateList: (updatedArtikel: IArtikel ) => void\n}\n\nexport function FormularListe(props:FormularListProps) {\n    //sagt, dass value veränderbar ist\n    const [value, setValue] = useState<string>('');\n\n    //nimmt die Eingabe und setzt diese auf value\n    const handleChange:ChangeEventHandler<HTMLInputElement> = (event) => {\n        setValue(event.currentTarget.value);\n    };\n\n    //bei Klick auf erstellen mache Folgendes\n    const handleSubmit:FormEventHandler<HTMLFormElement> = (event) => {\n        //ruft setlist auf (in Mainpage)\n        const artikel:IArtikel={name: value}\n        props.updateList(artikel)\n        //leert value\n        setValue(\"\")\n        event.preventDefault();\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>Artikel:\n                <input type=\"text\"\n                       value={value}\n                       onChange={handleChange}\n                />\n            </label>\n            <input type=\"submit\" value=\"hinzufügen\" />\n        </form>\n    );\n}","import axios from \"axios\";\nimport {IArtikel} from \"../Models/Artikel\";\n\n//In order to gain the TypeScript typings (for intellisense / autocomplete)\n// while using CommonJS imports with require() use the following approach:\n//const axios = require('axios').default;\n//const INDEV= process.env.NODE_ENV ===\"development\"\n//const BASEURL= INDEV ? \"http://localhost:8080\" : \"\";\nexport const getAllArtikel: ()=> Promise<IArtikel[]> = () =>\n    axios.get('/api/zettel').then(response => response.data)\n\nexport const postArtikel = (name: String) =>\n    axios.post('/api/zettel/addArtikel', {name: name})\n\n//export const getArtikel = () =>\n//     axios\n//         .get(\"https://rickandmortyapi.com/api/character\")\n//         .then(response => response.data)","import \"../Components/Liste.css\"\nimport React, {useEffect, useState} from \"react\";\nimport Artikel, {IArtikel} from \"./Artikel\";\nimport {FormularListe} from \"../services/FormularListe\";\nimport {getAllArtikel} from \"../services/api-service\";\n\nexport function Liste(){\n    //erstellt und aktualisiert Liste\n    //da die Liste leer ist aber TypeScript Typen braucht, typecasten\n    //wir hier das Array in ein Stringarray durch \"as Array<string>\"\n    //const [artikel, setArtikel] = useState([] as Array<string>);\n\n    const [artikel, setArtikel] = useState<IArtikel[]>([]);\n    useEffect(() => {\n        getAllArtikel().then((data:IArtikel[]) =>setArtikel(data))\n    }, [])\n    const updateArtikel = (newArtikel:IArtikel) => {\n        //erstellt Kopie der Liste und\n        //fügt neue Liste direkt hinzu\n        const aktuellerStand:IArtikel[] = [...artikel, newArtikel];\n        //setzt Liste auf aktuellem Stand\n        setArtikel(aktuellerStand)\n    }\n\n    const deleteList = () => {\n        setArtikel([])\n    }\n\n    //bei Klick auf löschen mache Folgendes\n    const deleteArtikel = (index:number) => {\n        //neues Array mit alten Daten\n        let aktuelleListe = [...artikel]\n        aktuelleListe.splice(index, 1)\n        setArtikel(aktuelleListe)\n    }\n\n    return(<div>\n             <FormularListe updateList={updateArtikel} />\n             <ul>{artikel.map((value: IArtikel, index: number) =>\n                 (<li key={index}>\n                     <Artikel artikel={value} index={index} button={deleteArtikel} />\n                 </li>))}\n             </ul>\n             <button onClick={deleteList}>Liste löschen</button>\n     </div>)\n\n\n}\n\n//return(<div>\n//             <FormularListe updateList={updateArtikel} />\n//             <ul>{artikel.map((value: string, index: number) =>\n//                 (<li key={index}>\n//                     <Artikel name={value} anzahl={1} index={index} button={deleteArtikel} />\n//                 </li>))}\n//             </ul>\n//             <button onClick={deleteList}>Liste löschen</button>\n//     </div>\n//     )","import \"../Pages/Mainpage.css\"\nimport Header from \"../Components/Header\";\nimport React from \"react\";\nimport {Liste} from \"../Models/Liste\";\n\nexport default function Mainpage(){\n    //gibt an, was auf der Mainpage rauskommen soll\n    return(\n        <div className=\"mainpage\">\n            <Header title=\"Einkaufszettel\"/>\n            <Liste />\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Mainpage from \"./Pages/Mainpage\";\n\nfunction App() {\n  return (\n      <Mainpage/>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}